@using DragAndDropFluid.Misc
@using DragAndDropFluid.Model
<div 
	 class="nsdiv noselect"
	 style="touch-action:none;border-radius: 25px;box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;left:@(Position.X)px;top:@(Position.Y)px;position:absolute;background:#50586D;width:@(Size.X)px;height:@(Size.Y)px"
	 @onmousedown="OnMouseDown" 
	 @onmouseup="OnMouseUp"

	 @ontouchstart="OnTouchStart"
	 @ontouchend="OnTouchEnd"
	 
	 >
	@ChildContent
	<p>Index is @Index</p>
	<p>Row: @Row</p>
	<p>Column: @Column</p>
</div>

@code {
	[Parameter] public Point2d? Position { get; set; }
	[Parameter] public Point2d? Size { get; set; }

	[CascadingParameter] public DragContainerView? Parent { get; set; }
	[Parameter] public RenderFragment? ChildContent { get; set; }

	public int Column { get; set; }
	public int Row { get; set; }

	public int Index { get; set; } = -1;

	protected override void OnParametersSet()
	{
		base.OnParametersSet();

		if (Position == null || Size == null)
			return;


		var indices = Toolkit.CalculateIndices(Position, Size, 0.5);

		Column = indices.Column;
		Row = indices.Row;

	}

	protected override void OnInitialized()
	{
		base.OnInitialized();

		if (Parent == null)
			return;

		Index = Parent.AddDragItem(this);
	}

	private void OnTouchStart(TouchEventArgs e)
	{
		Parent?.NotifyTouchStart(e, Index);
	}

	private void OnTouchEnd(TouchEventArgs e)
	{
		Parent?.NotifyTouchEnd(e);
	}

	private void OnMouseDown(MouseEventArgs e)
	{
		Parent?.NotifyMouseDown(Index);
	}

	private void OnMouseUp(MouseEventArgs e)
	{
		Parent?.NotifyMouseUp();
	}
}
